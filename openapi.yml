openapi: 3.0.3
info:
  title: STD24001
  description: specification  STD24001
  version: 1.0.0
servers:
  - url: http://localhost:8000

paths:
  /ping:
    get:
      summary: Health check endpoint
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
                example: "pong"

  /cars:
    get:
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Car'
      responses:
        '201':
          description: Cars created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCarsResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cars/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Car identifier
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '404':
          description: Car not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cars/{id}/characteristics:
    put:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Car identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Characteristic'
      responses:
        '200':
          description: Characteristics updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '404':
          description: Car not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Characteristic:
      type: object
      required:
        - max_speed
        - max_fuel_capacity
      properties:
        max_speed:
          type: number
          format: float
          example: 180.5
        max_fuel_capacity:
          type: number
          format: float
          example: 60.0

    Car:
      type: object
      required:
        - identifier
        - brand
        - model
        - characteristics
      properties:
        identifier:
          type: string
          example: "car1"
        brand:
          type: string
          example: "Toyota"
        model:
          type: string
          example: "Camry"
        characteristics:
          $ref: '#/components/schemas/Characteristic'

    CreateCarsResponse:
      type: object
      properties:
        message:
          type: string
          example: "Successfully created 2 car(s)"
        cars:
          type: array
          items:
            $ref: '#/components/schemas/Car'

